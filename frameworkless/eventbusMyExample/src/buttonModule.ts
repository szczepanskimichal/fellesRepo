// src/buttonModule.ts
import { eventBus } from './eventBus';

export function setupButtons() {
  const notifyBtn = document.querySelector<HTMLButtonElement>('#notifyBtn')!;
  const resetBtn = document.querySelector<HTMLButtonElement>('#resetBtn')!;
  const colorBtn = document.querySelector<HTMLButtonElement>('#colorBtn')!;

  notifyBtn.addEventListener('click', () => {
    console.log('ðŸŸ¡ KlikniÄ™to przycisk WYÅšLIJ');
    // âœ… TypeScript sprawdzi Å¼e przekazujesz { message: string }
    eventBus.emit('buttonClicked', { message: 'CzeÅ›Ä‡ z Event Busa ðŸš€' });
  });

  resetBtn.addEventListener('click', () => {
    console.log('ðŸ”µ KlikniÄ™to przycisk RESET');
    // âœ… TypeScript wie Å¼e resetScreen nie wymaga danych
    eventBus.emit('resetScreen', undefined);
  });

  colorBtn.addEventListener('click', () => {
    console.log('ðŸŸ  KlikniÄ™to przycisk ZMIEÅƒ KOLOR');
    const colors = ['darkblue', 'red', 'green', 'purple', 'orange', 'brown'];
    const randomColor = colors[Math.floor(Math.random() * colors.length)];
    // âœ… TypeScript sprawdzi Å¼e przekazujesz { color: string }
    eventBus.emit('changeColor', { color: randomColor });
  });
}